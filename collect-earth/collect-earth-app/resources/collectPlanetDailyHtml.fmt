
<!DOCTYPE html>
<html>
<head>
	
	<title>Planet Labs - Collect Earth Integration</title>

	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	
	<link rel="shortcut icon" type="image/x-icon" href="docs/images/favicon.ico" />

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css" integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==" crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js" integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew==" crossorigin=""></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

	<style>
		html, body {
			height: 100%;
			margin: 0;
		}
		#map {
			width: 100%;
			height: 100%;
		}
	</style>
	
<script>
  $( function() {
    $( "#slider" ).slider();
  } );
  </script>
	
</head>
<body>
<div id='map'></select></></div>

<script type="text/javascript">


	var map = L.map('map');
	var lastLayer;
	var setLayer = function( period ){
		if( lastLayer ){
			map.removeLayer( lastLayer);		
		}
		lastLayer = L.tileLayer('https://tiles0.planet.com/basemaps/v1/planet-tiles/'+period+'/gmap/{z}/{x}/{y}.png?api_key=${planetMapsKey}', {
			tms: false
		}).addTo(map);
	}
	
	setLayer( 'global_monthly_2019_10_mosaic' );
	
	var latlngs = [ 
	// create a red polyline from an array of LatLng points
			<#list placemark.multiShape as shp>
             [
            	<#list shp as coord>
				[${coord.latitude},${coord.longitude}],
				</#list>
			],
			</#list>
           <#list placemark.points as square>
 				[ 
			     <#list square.shape as squareCorners>
			           [${squareCorners.latitude},${squareCorners.longitude}],
			     </#list>
		     	],
		     	<#if square.points?? >
					<#list square.points as innerpoint>
					[
						<#list innerpoint.shape as squareCorners>
					  [${squareCorners.latitude},${squareCorners.longitude}],
						</#list>
					],				 
					</#list>
				</#if>		     	
		    </#list>
	];
	

	 var datesTicks = [];
	  
	 var currentYear = new Date().getFullYear();
	 var currentMonth = new Date().getMonth() + 1; // January is 0
	 
	 for( var year = 2014; year<=currentYear; year++){
	 
	 	for( var month=1; month<=12; month++ ){
	 	
	 		if( year === currentYear && month >= currentMonth ){
	 			continue; 		
	 		}
	 		
	 		datesTicks.push( year + "/" + month ); 
	 	}
	 	
	 
	 }
	 
	 var datesValues = Array.from(Array( datesTicks.length ).keys())

	var polyline = L.polyline(latlngs, {color: 'yellow'}).addTo(map);
	// zoom the map to the polyline
	map.fitBounds(polyline.getBounds(), { padding : [35,35] } );

	var legend = L.control({position: 'topright'  });
	
	var sliderElement = document.createElement("div", [, options]);
	sliderElement.setAttribute("id", "slider");

<input id="slider" type="text" data-slider-ticks="" data-slider-ticks-snap-bounds="1" data-slider-ticks-labels=''/>


	legend.onAdd = function (map) {
		var div = L.DomUtil.create('div', 'info legend', sliderElement);
		div.innerHTML = '<p> <label for="range">Date range:</label> <input type="text" id="range" readonly style="border:0; color:#f6931f; font-weight:bold;"> </p></div>';
		div.firstChild.onmousedown = div.firstChild.ondblclick = L.DomEvent.stopPropagation;
		return div;
	};
	
	legend.addTo(map);
	
$('#slider').change(function( ){
	setLayer( this.value );
});

$('#slider')
         .attr("data-slider-ticks",datesValues)
         .attr("data-slider-ticks-labels",datesTicks)
                    
                    
</script>



</body>
</html>
