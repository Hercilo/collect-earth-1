
<!DOCTYPE html>
<html>
<head>
	
	<title>Planet Labs - Collect Earth Integration</title>

	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	
 	<link rel="stylesheet" href="http://ghusse.github.io/jQRangeSlider/stable/css/iThing.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css" integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==" crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js" integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew==" crossorigin=""></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>
	<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.18/themes/smoothness/jquery-ui.css">
	<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.18/jquery-ui.min.js"></script>
	<script src="http://ghusse.github.io/jQRangeSlider/stable/jQRangeSliderMouseTouch.js"></script>
	<script src="http://ghusse.github.io/jQRangeSlider/stable/jQRangeSliderDraggable.js"></script>
	<script src="http://ghusse.github.io/jQRangeSlider/stable/jQRangeSliderBar.js"></script>
	<script src="http://ghusse.github.io/jQRangeSlider/stable/jQRangeSliderHandle.js"></script>
	<script src="http://ghusse.github.io/jQRangeSlider/stable/jQRangeSliderLabel.js"></script>
	<script src="http://ghusse.github.io/jQRangeSlider/stable/jQRangeSlider.js"></script>
	<script src="http://ghusse.github.io/jQRangeSlider/stable/jQDateRangeSliderHandle.js"></script>
	<script src="http://ghusse.github.io/jQRangeSlider/stable/jQDateRangeSlider.js"></script>
	<script src="http://ghusse.github.io/jQRangeSlider/stable/jQRuler.js"></script>
	<style>
		html, body {
			height: 100%;
			margin: 0;
		}
		#map {
			width: 100%;
			height: 100%;
		}
	</style>

	
</head>
<body>
<div id='map' style="z-index: 1;"></select></></div>
<div id="slider" style="position:absolute; bottom:0px; left:15px; right:15px; width:95%; height:100px; z-index: 100"></div>

<script>
     $("#slider").dateRangeSlider({
		valueLabels:"change",
		delayOut: 4000,
		min: {days: 2},
		max: {days: 30},
		bounds: {min: new Date(2016, 0, 1), max: new Date(2019,12,31)},
		defaultValues: {min: new Date(2019, 10, 01), max: new Date(2019, 10, 31)},
		})
		
		$("#slider").bind("userValuesChanged", function(e, data){
		  
		  $.post( "${urlPlanetEndpointPrefix}planet", 
			{ start: JSON.stringify( data.values.min ), end : JSON.stringify( data.values.max ), geometry : JSON.stringify( boundaries ) })
			  .done(function( data ) {
			  	if( data === ""){
			  		alert("No imagery for the dates selected");
			  	}
				setLayer( data );
			  });
			setLayer( this.value );
			
		});
</script>
<script type="text/javascript">


	var map = L.map('map');
	var lastLayer;
	var setLayer = function( url ){
		if( lastLayer ){
			map.removeLayer( lastLayer);		
		}
		lastLayer = L.tileLayer(url+'?api_key=${planetMapsKey}', {
			tms: false
		}).addTo(map);
	}
	
	setLayer( "${latestUrl}" );
	
	var boundaries = [ 
	// create a red polyline from an array of LatLng points
			<#list placemark.multiShape as shp>
             [
            	<#list shp as coord>
				[${coord.longitude},${coord.latitude}],
				</#list>
			]
			</#list>
			];
	var latlngs = [ 
	// create a red polyline from an array of LatLng points
			<#list placemark.multiShape as shp>
             [
            	<#list shp as coord>
				[${coord.latitude},${coord.longitude}],
				</#list>
			],
			</#list>
           <#list placemark.points as square>
 				[ 
			     <#list square.shape as squareCorners>
			           [${squareCorners.latitude},${squareCorners.longitude}],
			     </#list>
		     	],
		     	<#if square.points?? >
					<#list square.points as innerpoint>
					[
						<#list innerpoint.shape as squareCorners>
					  [${squareCorners.latitude},${squareCorners.longitude}],
						</#list>
					],				 
					</#list>
				</#if>		     	
		    </#list>
	];
	

	var polyline = L.polyline(latlngs, {color: 'yellow'}).addTo(map);
	// zoom the map to the polyline
	map.fitBounds(polyline.getBounds(), { padding : [35,35] } );

	var legend = L.control({position: 'topright'  });
	legend.onAdd = function (map) {
		var div = L.DomUtil.create('div', 'info legend');
		div.innerHTML = '<select><option value="2019-10-01">Planet Monthly 2019-10</option></select>';
		div.firstChild.onmousedown = div.firstChild.ondblclick = L.DomEvent.stopPropagation;
		return div;
	};
	
	legend.addTo(map);
	
$('select').change(function( ){
	$.post( "${urlPlanetEndpointPrefix}planet", 
			{ start: this.value, end : "", geometry : JSON.stringify( latlngs ) })
	  .done(function( data ) {
	    setLayer( data );
	  });
	setLayer( this.value );
});
</script>



</body>
</html>
